# 履歴データ

## 履歴データの検証

```elixir
defmodule Test do
  alias Bright.Repo
  import Ecto.Query, warn: false
  alias Bright.HistoricalSkillPanels.HistoricalSkillClass
  alias Bright.Batches.UpdateSkillPanels

  def all do
    Repo.all(HistoricalSkillClass)
    |> Repo.preload([:skill_panel, :historical_skill_class_scores])
  end

  def get_historical_istorical_skill_class_scores(locked_date, skill_panel_id, class, user_id) do
    IO.inspect(locked_date)

    from(
      historical_skill_class in HistoricalSkillClass,
      join:
        historical_skill_class_scores in assoc(
          historical_skill_class,
          :historical_skill_class_scores
        ),
      on: historical_skill_class_scores.user_id == ^user_id,
      where:
        historical_skill_class.skill_panel_id == ^skill_panel_id and
          historical_skill_class.class == ^class
    )
    |> Repo.all()
    |> Repo.preload([:skill_panel, :historical_skill_class_scores])
  end

  def update(year, month) do
    locked_date =
      {year, month, 1}
      |> Date.from_erl!()

    UpdateSkillPanels.call(locked_date)
  end
end

# Test.update(2023, 6)
locked_date = {2023, 7, 1} |> Date.from_erl!()

Test.get_historical_istorical_skill_class_scores(
  locked_date,
  "01H7PSFNEQFX0TT6TPPVBB66D8",
  1,
  "01H7PSHBHA4DMYPSACE06A092H"
)

# Test.all()
```
